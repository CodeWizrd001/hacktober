
#include<stdio.h>
#include<stdlib.h>
#include<limits.h>

void read(int X[],int n,FILE *fin,FILE *fout)
{
	for(int i=0;i<n;i++)
	
		if((fscanf(fin,"%d",&X[i])!=1)||(X[i]>32767))
		{
			fprintf(fout,"-999");
			exit(0);
		}
}
 

void display(int X[],int n,FILE *fout)
{
	for(int i=0;i<n;i++)
 		fprintf(fout,"%d ",X[i]);
	//fprintf(fout,"\n");
}

int digit(int n)
{
	int sum=0;
	while(n!=0)
	{
		sum=sum+n%2;
		n=n/2;
	}
	return sum;
}

void bucketSort(int A[],int n,FILE *fout)
{
	int pos=0;
	for(int i=0;i<17;i++)
	{
		int min;
		do{
		min=INT_MAX;
		int index;
		for(int j=pos;j<n;j++)
		{
			if((digit(A[j])==i)&&(A[j]<min))
			{
				index=j;
				min=A[j];
			}
		}
		if(min!=INT_MAX)
		{
			int temp=A[pos];
			A[pos]=A[index];
			A[index]=temp;
			pos++;
		}
		}while(min!=INT_MAX);
	}

	for(int i=0;i<n;i++)
	{
		display(A+i,1,fout);
		if((digit(A[i+1]))!=(digit(A[i])))
			fprintf(fout,"\n");
	}
}


void main()
{
	FILE *fin,*fout;

        fin=fopen("input.txt","r");
	fout=fopen("output.txt","w");

        char c;
	int X[100],n,flag=0;
	float n1;	
	do
	{
		if(fscanf(fin," %c",&c)!=1)
		{
			fprintf(fout,"-999");
			exit(0);
		}

		switch (c)
		{

			case 'r':if(((fscanf(fin,"%f",&n1))!=1)||(n1<=0)||(n1!=(int)n1))
				 {
					 fprintf(fout,"-999");
					 exit(0);
				 }
				 n=(int)n1;
				 
		       	         read(X,n,fin,fout);
				 flag=1;
		                 break; 
			case 's':if(flag==0)
				 {
					 fprintf(fout,"-999");
					 exit(0);
				 }
				 bucketSort(X,n,fout);
				 
				 break;
			case 'd':
				 if(flag==0)
				 {
					 fprintf(fout,"-999");
					 exit(0);
				 }
				 int x;
                                 if((fscanf(fin,"%d",&x)!=1)||(x>n))
				 {
					 fprintf(fout,"-999");
					 exit(0);
				 }
                                 
                                 display(X,x,fout);
				 fprintf(fout,"\n");
				 break;
			case 't':break;
			default:fprintf(fout,"-999");
				exit(0);
		}
	}	while(c!='t');
	fclose(fin);
	fclose(fout);
}
